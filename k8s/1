[main 36a0266] updated
 1 file changed, 1 insertion(+), 1 deletion(-)
fatal: unable to write credential store: Resource busy
To https://github.com/dpsrv/rc.git
   b4b36d8..36a0266  main -> main
secret/domain-credential configured
+ '[' -n 'dpsrv dpsrv/rc/secrets/letsencrypt/live/domain/ s#^dpsrv/rc/secrets/##g
dpsrv dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g
' ]
+ echo 'dpsrv dpsrv/rc/secrets/letsencrypt/live/domain/ s#^dpsrv/rc/secrets/##g
dpsrv dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g
'
+ read secret_files_rule
+ '[' -n 'dpsrv dpsrv/rc/secrets/letsencrypt/live/domain/ s#^dpsrv/rc/secrets/##g' ]
+ basename /usr/local/bin/export-files.sh
+ secret_files_rule_file=/tmp/export-files.sh.secret_files_rule.98
+ echo 'dpsrv dpsrv/rc/secrets/letsencrypt/live/domain/ s#^dpsrv/rc/secrets/##g'
+ read -r secret_files_ns secret_files_path secret_files_xform
+ rm /tmp/export-files.sh.secret_files_rule.98
+ read file
+ find /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/ '!' -type d
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/README
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/README
+ tr A-Z a-z
+ sed 's#/#-#g'
+ sed 's#^dpsrv/rc/secrets/##g'
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/README
+ secret_name=letsencrypt-live-domain-readme
+ grep -v unchanged
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-readme '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/README' '--dry-run=client' -o yaml
+ kubectl apply -f -
secret/letsencrypt-live-domain-readme configured
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/cert.pem
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/cert.pem
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/cert.pem
+ sed 's#/#-#g'
+ tr A-Z a-z
+ sed 's#^dpsrv/rc/secrets/##g'
+ secret_name=letsencrypt-live-domain-cert.pem
+ grep -v unchanged
+ kubectl apply -f -
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-cert.pem '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/cert.pem' '--dry-run=client' -o yaml
secret/letsencrypt-live-domain-cert.pem configured
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/chain.pem
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/chain.pem
+ sed 's#/#-#g'
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/chain.pem
+ tr A-Z a-z
+ sed 's#^dpsrv/rc/secrets/##g'
+ secret_name=letsencrypt-live-domain-chain.pem
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-chain.pem '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/chain.pem' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
secret/letsencrypt-live-domain-chain.pem configured
+ read file
+ + sed 's#/mnt/data/*##g'
echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/fullchain.pem
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/fullchain.pem
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/fullchain.pem
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=letsencrypt-live-domain-fullchain.pem
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-fullchain.pem '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/fullchain.pem' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
secret/letsencrypt-live-domain-fullchain.pem configured
+ read file
+ sed 's#/mnt/data/*##g'
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/privkey.pem
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/privkey.pem
+ sed 's#^dpsrv/rc/secrets/##g'
+ tr A-Z a-z
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/privkey.pem
+ sed 's#/#-#g'
+ secret_name=letsencrypt-live-domain-privkey.pem
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-privkey.pem '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/privkey.pem' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
secret/letsencrypt-live-domain-privkey.pem configured
+ read file
+ read secret_files_rule
+ '[' -n 'dpsrv dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g' ]
+ basename /usr/local/bin/export-files.sh
+ secret_files_rule_file=/tmp/export-files.sh.secret_files_rule.98
+ echo 'dpsrv dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g'
+ read -r secret_files_ns secret_files_path secret_files_xform
+ rm /tmp/export-files.sh.secret_files_rule.98
+ find /mnt/data/dpsrv/rc/secrets/mongo/conf/ '!' -type d
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/cert.pem
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/cert.pem
+ echo dpsrv/rc/secrets/mongo/conf/cert.pem
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=mongo-conf-cert.pem
+ kubectl -n dpsrv create secret generic mongo-conf-cert.pem '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/cert.pem' '--dry-run=client' -o yaml
+ grep -v unchanged
+ kubectl apply -f -
secret/mongo-conf-cert.pem configured
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ echo dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=mongo-conf-dpsrv.key
+ kubectl -n dpsrv create secret generic mongo-conf-dpsrv.key '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/dpsrv.key' '--dry-run=client' -o yaml
+ grep -v unchanged
+ kubectl apply -f -
secret/mongo-conf-dpsrv.key configured
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/admin-username
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/admin-username
+ + + echosedsed 's#/#-#g' 's#^dpsrv/rc/secrets/##g'

+ tr A-Z a-z
 dpsrv/rc/secrets/mongo/conf/admin-username
+ secret_name=mongo-conf-admin-username
+ kubectl -n dpsrv create secret generic mongo-conf-admin-username '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/admin-username' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
secret/mongo-conf-admin-username configured
+ read file
+ sed 's#/mnt/data/*##g'
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/admin-password
+ secret_path=dpsrv/rc/secrets/mongo/conf/admin-password
+ echo dpsrv/rc/secrets/mongo/conf/admin-password
+ sed 's#^dpsrv/rc/secrets/##g'
+ tr A-Z a-z
+ sed 's#/#-#g'
+ secret_name=mongo-conf-admin-password
+ + + kubectlkubectl apply -f -
grep -n -v dpsrv unchanged create
 secret generic mongo-conf-admin-password '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/admin-password' '--dry-run=client' -o yaml
secret/mongo-conf-admin-password configured
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/mongod.conf
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/mongod.conf
+ echo dpsrv/rc/secrets/mongo/conf/mongod.conf
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=mongo-conf-mongod.conf
+ kubectl -n dpsrv create secret generic mongo-conf-mongod.conf '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/mongod.conf' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
secret/mongo-conf-mongod.conf configured
+ read file
+ read secret_files_rule
+ '[' -n  ]
+ continue
+ read secret_files_rule
+ '[' -n 'dpsrv dpsrv/rc/secrets/redis/redis.env s/^/redis-/g
ezsso ezsso/rc/secrets/dating/.env.local s/^/dating-/g
' ]
+ echo 'dpsrv dpsrv/rc/secrets/redis/redis.env s/^/redis-/g
ezsso ezsso/rc/secrets/dating/.env.local s/^/dating-/g
'
+ read secret_env_rule
+ basename /usr/local/bin/export-env.sh
+ secret_env_rule_file=/tmp/export-env.sh.364.secret_env_rule
+ echo 'dpsrv dpsrv/rc/secrets/redis/redis.env s/^/redis-/g'
+ read -r secret_env_ns secret_env_file secret_env_xform
+ rm /tmp/export-env.sh.364.secret_env_rule
+ secret_env_path=/mnt/data/dpsrv/rc/secrets/redis/redis.env
+ + cat /mnt/data/dpsrv/rc/secrets/redis/redis.envread
 secret_env
+ '[' -n /mnt/data/dpsrv/rc/secrets/redis/redis.env ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.364.secret_env
+ echo 'RI_REDIS_HOST dpsrv-redis-latest'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.364.secret_env
+ '[' -z s/^/redis-/g ]
+ + echosed s/^/redis-/g
 RI_REDIS_HOST
+ secret_name=redis-RI_REDIS_HOST
+ echo redis-RI_REDIS_HOST
+ tr A-Z_ a-z-
+ secret_name=redis-ri-redis-host
+ kubectl -n dpsrv create secret generic redis-ri-redis-host '--from-literal=redis-ri-redis-host=dpsrv-redis-latest' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
secret/redis-ri-redis-host configured
+ read secret_env
+ '[' -n /mnt/data/dpsrv/rc/secrets/redis/redis.env ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.364.secret_env
+ echo 'RI_REDIS_PASSWORD 7f810373e1ed256265de4276bce83800'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.364.secret_env
+ '[' -z s/^/redis-/g ]
+ echo RI_REDIS_PASSWORD
+ sed s/^/redis-/g
+ secret_name=redis-RI_REDIS_PASSWORD
+ echo redis-RI_REDIS_PASSWORD
+ tr A-Z_ a-z-
+ secret_name=redis-ri-redis-password
+ kubectl -n dpsrv create secret generic redis-ri-redis-password '--from-literal=redis-ri-redis-password=7f810373e1ed256265de4276bce83800' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
secret/redis-ri-redis-password configured
+ read secret_env
+ read secret_env_rule
+ basename /usr/local/bin/export-env.sh
+ secret_env_rule_file=/tmp/export-env.sh.364.secret_env_rule
+ echo 'ezsso ezsso/rc/secrets/dating/.env.local s/^/dating-/g'
+ read -r secret_env_ns secret_env_file secret_env_xform
+ rm /tmp/export-env.sh.364.secret_env_rule
+ secret_env_path=/mnt/data/ezsso/rc/secrets/dating/.env.local
+ cat /mnt/data/ezsso/rc/secrets/dating/.env.local
+ read secret_env
+ '[' -n /mnt/data/ezsso/rc/secrets/dating/.env.local ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.364.secret_env
+ echo 'DATING_MONGODB "mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem"'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.364.secret_env
+ '[' -z s/^/dating-/g ]
+ echo DATING_MONGODB
+ sed s/^/dating-/g
+ secret_name=dating-DATING_MONGODB
+ echo dating-DATING_MONGODB
+ tr A-Z_ a-z-
+ secret_name=dating-dating-mongodb
+ kubectl -n ezsso create secret generic dating-dating-mongodb '--from-literal=dating-dating-mongodb="mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem"' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
secret/dating-dating-mongodb configured
+ read secret_env
+ '[' -n /mnt/data/ezsso/rc/secrets/dating/.env.local ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.364.secret_env
+ echo 
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.364.secret_env
+ '[' -z s/^/dating-/g ]
+ echo
+ sed s/^/dating-/g
+ secret_name=dating-
+ echo dating-
+ tr A-Z_ a-z-
+ secret_name=dating-
+ kubectl -n ezsso create secret generic dating- '--from-literal=dating-=' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
The Secret "dating-" is invalid: metadata.name: Invalid value: "dating-": a lowercase RFC 1123 subdomain must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character (e.g. 'example.com', regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*')
