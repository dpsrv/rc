[main ac89940] updated
 1 file changed, 1 insertion(+), 1 deletion(-)
fatal: unable to write credential store: Resource busy
To https://github.com/dpsrv/rc.git
   5dd8657..ac89940  main -> main
+ '[' -n 'dpsrv dpsrv/rc/secrets/letsencrypt/live/domain/ s#^dpsrv/rc/secrets/##g
dpsrv dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g
ezsso dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g
' ]
+ read secret_files_rule
+ echo 'dpsrv dpsrv/rc/secrets/letsencrypt/live/domain/ s#^dpsrv/rc/secrets/##g
dpsrv dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g
ezsso dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g
'
+ '[' -n 'dpsrv dpsrv/rc/secrets/letsencrypt/live/domain/ s#^dpsrv/rc/secrets/##g' ]
+ basename /usr/local/bin/export-files.sh
+ secret_files_rule_file=/tmp/export-files.sh.secret_files_rule.92
+ echo 'dpsrv dpsrv/rc/secrets/letsencrypt/live/domain/ s#^dpsrv/rc/secrets/##g'
+ read -r secret_files_ns secret_files_path secret_files_xform
+ rm /tmp/export-files.sh.secret_files_rule.92
+ find /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/ '!' -type d
+ read file
+ sed 's#/mnt/data/*##g'
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/README
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/README
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/README
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=letsencrypt-live-domain-readme
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-readme '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/README' '--dry-run=client' -o yaml
+ grep -v unchanged
+ kubectl apply -f -
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/cert.pem
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/cert.pem
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/cert.pem
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=letsencrypt-live-domain-cert.pem
+ kubectl apply -f -
+ grep -v unchanged
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-cert.pem '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/cert.pem' '--dry-run=client' -o yaml
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/chain.pem
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/chain.pem
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/chain.pem
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=letsencrypt-live-domain-chain.pem
+ kubectl apply -f -
+ kubectl -n+  dpsrvgrep create -v unchanged secret generic
 letsencrypt-live-domain-chain.pem '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/chain.pem' '--dry-run=client' -o yaml
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/fullchain.pem
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/fullchain.pem
+ sed 's#^dpsrv/rc/secrets/##g'
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/fullchain.pem
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=letsencrypt-live-domain-fullchain.pem
+ kubectl apply -f -
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-fullchain.pem '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/fullchain.pem' '--dry-run=client' -o yaml
+ grep -v unchanged
+ true
+ read file
+ sed 's#/mnt/data/*##g'
+ echo /mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/privkey.pem
+ secret_path=dpsrv/rc/secrets/letsencrypt/live/domain/privkey.pem
+ sed 's#/#-#g'
+ tr A-Z a-z
+ sed 's#^dpsrv/rc/secrets/##g'
+ echo dpsrv/rc/secrets/letsencrypt/live/domain/privkey.pem
+ secret_name=letsencrypt-live-domain-privkey.pem
+ kubectl -n dpsrv create secret generic letsencrypt-live-domain-privkey.pem '--from-file=/mnt/data/dpsrv/rc/secrets/letsencrypt/live/domain/privkey.pem' '--dry-run=client' -o yaml
+ + kubectlgrep apply -f -
 -v unchanged
+ true
+ read file
+ read secret_files_rule
+ '[' -n 'dpsrv dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g' ]
+ basename /usr/local/bin/export-files.sh
+ secret_files_rule_file=/tmp/export-files.sh.secret_files_rule.92
+ echo 'dpsrv dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g'
+ read -r secret_files_ns secret_files_path secret_files_xform
+ rm /tmp/export-files.sh.secret_files_rule.92
+ read file
+ find /mnt/data/dpsrv/rc/secrets/mongo/conf/ '!' -type d
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/admin-password
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/admin-password
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ echo dpsrv/rc/secrets/mongo/conf/admin-password
+ tr A-Z a-z
+ secret_name=mongo-conf-admin-password
+ kubectl apply -f -
+ kubectl -n dpsrv create secret generic mongo-conf-admin-password '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/admin-password' '--dry-run=client' -o yaml
+ grep -v unchanged
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/admin-username
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/admin-username
+ echo dpsrv/rc/secrets/mongo/conf/admin-username
+ sed 's#^dpsrv/rc/secrets/##g'
+ tr A-Z a-z
+ sed 's#/#-#g'
+ secret_name=mongo-conf-admin-username
+ kubectl apply -f -
+ grep -v unchanged
+ kubectl -n dpsrv create secret generic mongo-conf-admin-username '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/admin-username' '--dry-run=client' -o yaml
+ true
+ read file
+ sed 's#/mnt/data/*##g'
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/cert.pem
+ secret_path=dpsrv/rc/secrets/mongo/conf/cert.pem
+ echo+  dpsrv/rc/secrets/mongo/conf/cert.pem
tr A-Z a-z
+ sed 's#/#-#g'
+ sed 's#^dpsrv/rc/secrets/##g'
+ secret_name=mongo-conf-cert.pem
+ kubectl -n dpsrv create secret generic mongo-conf-cert.pem '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/cert.pem' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ echo dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ sed 's#/#-#g'
+ sed 's#^dpsrv/rc/secrets/##g'
+ tr A-Z a-z
+ secret_name=mongo-conf-dpsrv.key
+ kubectl apply -f -
+ kubectl -n dpsrv create secret generic mongo-conf-dpsrv.key '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/dpsrv.key' '--dry-run=client' -o yaml
+ grep -v unchanged
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/mongod.conf
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/mongod.conf
+ echo dpsrv/rc/secrets/mongo/conf/mongod.conf
+ sed 's#/#-#g'
+ tr A-Z a-z
+ sed 's#^dpsrv/rc/secrets/##g'
+ secret_name=mongo-conf-mongod.conf
+ kubectl apply -f -
+ grep -v unchanged
+ kubectl -n dpsrv create secret generic mongo-conf-mongod.conf '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/mongod.conf' '--dry-run=client' -o yaml
+ true
+ read file
+ read secret_files_rule
+ '[' -n 'ezsso dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g' ]
+ basename /usr/local/bin/export-files.sh
+ secret_files_rule_file=/tmp/export-files.sh.secret_files_rule.92
+ echo 'ezsso dpsrv/rc/secrets/mongo/conf/ s#^dpsrv/rc/secrets/##g'
+ read -r secret_files_ns secret_files_path secret_files_xform
+ rm /tmp/export-files.sh.secret_files_rule.92
+ find /mnt/data/dpsrv/rc/secrets/mongo/conf/ '!' -type d
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/admin-password
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/admin-password
+ echo dpsrv/rc/secrets/mongo/conf/admin-password
+ sed 's#/#-#g'
+ tr A-Z a-z
+ sed 's#^dpsrv/rc/secrets/##g'
+ secret_name=mongo-conf-admin-password
+ kubectl apply -f -
+ kubectl -n ezsso create secret generic mongo-conf-admin-password '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/admin-password' '--dry-run=client' -o yaml
+ grep -v unchanged
+ true
+ read file
+ sed 's#/mnt/data/*##g'
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/admin-username
+ secret_path=dpsrv/rc/secrets/mongo/conf/admin-username
+ echo dpsrv/rc/secrets/mongo/conf/admin-username
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ secret_name=mongo-conf-admin-username
+ grep+ kubectl apply -f -
 -v unchanged
+ kubectl -n ezsso create secret generic mongo-conf-admin-username '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/admin-username' '--dry-run=client' -o yaml
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/cert.pem
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/cert.pem
+ sed 's#^dpsrv/rc/secrets/##g'
+ tr A-Z a-z
+ sed 's#/#-#g'
+ echo dpsrv/rc/secrets/mongo/conf/cert.pem
+ secret_name=mongo-conf-cert.pem
+ kubectl -n ezsso create secret generic mongo-conf-cert.pem '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/cert.pem' '--dry-run=client' -o yaml
+ grep -v unchanged
+ kubectl apply -f -
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ echo dpsrv/rc/secrets/mongo/conf/dpsrv.key
+ tr A-Z a-z
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ secret_name=mongo-conf-dpsrv.key
+ grep -v unchanged
+ kubectl -n ezsso create secret generic mongo-conf-dpsrv.key '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/dpsrv.key' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ true
+ read file
+ echo /mnt/data/dpsrv/rc/secrets/mongo/conf/mongod.conf
+ sed 's#/mnt/data/*##g'
+ secret_path=dpsrv/rc/secrets/mongo/conf/mongod.conf
+ sed 's#^dpsrv/rc/secrets/##g'
+ sed 's#/#-#g'
+ tr A-Z a-z
+ echo dpsrv/rc/secrets/mongo/conf/mongod.conf
+ secret_name=mongo-conf-mongod.conf
+ kubectl -n ezsso create secret generic mongo-conf-mongod.conf '--from-file=/mnt/data/dpsrv/rc/secrets/mongo/conf/mongod.conf' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
+ true
+ read file
+ read secret_files_rule
+ '[' -n  ]
+ continue
+ read secret_files_rule
+ '[' -n 'dpsrv dpsrv/rc/secrets/redis/redis.env s/^/redis-/g
ezsso ezsso/rc/secrets/dating/.env.local s/^/dating-/g
' ]
+ echo 'dpsrv dpsrv/rc/secrets/redis/redis.env s/^/redis-/g
ezsso ezsso/rc/secrets/dating/.env.local s/^/dating-/g
'
+ read secret_env_rule
+ basename /usr/local/bin/export-env.sh
+ secret_env_rule_file=/tmp/export-env.sh.505.secret_env_rule
+ echo 'dpsrv dpsrv/rc/secrets/redis/redis.env s/^/redis-/g'
+ read -r secret_env_ns secret_env_file secret_env_xform
+ rm /tmp/export-env.sh.505.secret_env_rule
+ secret_env_path=/mnt/data/dpsrv/rc/secrets/redis/redis.env
+ read secret_env
+ cat /mnt/data/dpsrv/rc/secrets/redis/redis.env
+ '[' -n 'RI_REDIS_HOST=dpsrv-redis-latest' ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'RI_REDIS_HOST dpsrv-redis-latest'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n dpsrv-redis-latest ]
+ eval echo dpsrv-redis-latest
+ echo dpsrv-redis-latest
+ secret_value=dpsrv-redis-latest
+ '[' -z s/^/redis-/g ]
+ echo RI_REDIS_HOST
+ sed s/^/redis-/g
+ secret_name=redis-RI_REDIS_HOST
+ echo redis-RI_REDIS_HOST
+ tr A-Z_ a-z-
+ secret_name=redis-ri-redis-host
+ + envsubst
kubectl -n dpsrv create secret generic redis-ri-redis-host '--from-literal=redis-ri-redis-host=dpsrv-redis-latest' '--dry-run=client' -o yaml
+ grep -v unchanged
+ kubectl apply -f -
+ true
+ echo 0
+ read secret_env
+ '[' -n 'RI_REDIS_PASSWORD=7f810373e1ed256265de4276bce83800' ]
0
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'RI_REDIS_PASSWORD 7f810373e1ed256265de4276bce83800'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n 7f810373e1ed256265de4276bce83800 ]
+ eval echo 7f810373e1ed256265de4276bce83800
+ echo 7f810373e1ed256265de4276bce83800
+ secret_value=7f810373e1ed256265de4276bce83800
+ '[' -z s/^/redis-/g ]
+ sed s/^/redis-/g
+ echo RI_REDIS_PASSWORD
+ secret_name=redis-RI_REDIS_PASSWORD
+ echo redis-RI_REDIS_PASSWORD
+ tr A-Z_ a-z-
+ secret_name=redis-ri-redis-password
+ envsubst
+ grep -v unchanged
+ kubectl apply -f -
+ kubectl -n dpsrv create secret generic redis-ri-redis-password '--from-literal=redis-ri-redis-password=7f810373e1ed256265de4276bce83800' '--dry-run=client' -o yaml
+ true
+ echo 0
+ read secret_env
+ read secret_env_rule
0
+ basename /usr/local/bin/export-env.sh
+ secret_env_rule_file=/tmp/export-env.sh.505.secret_env_rule
+ echo 'ezsso ezsso/rc/secrets/dating/.env.local s/^/dating-/g'
+ read -r secret_env_ns secret_env_file secret_env_xform
+ rm /tmp/export-env.sh.505.secret_env_rule
+ secret_env_path=/mnt/data/ezsso/rc/secrets/dating/.env.local
+ cat /mnt/data/ezsso/rc/secrets/dating/.env.local
+ read secret_env
+ '[' -n 'DATING_MONGODB="mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem"' ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'DATING_MONGODB "mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem"'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n '"mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem"' ]
+ eval echo '"mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem"'
+ echo 'mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem'
+ secret_value='mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem'
+ '[' -z s/^/dating-/g ]
+ sed s/^/dating-/g
+ echo DATING_MONGODB
+ secret_name=dating-DATING_MONGODB
+ echo dating-DATING_MONGODB
+ tr A-Z_ a-z-
+ secret_name=dating-dating-mongodb
+ kubectl -n ezsso create secret generic dating-dating-mongodb '--from-literal=dating-dating-mongodb=mongodb://dating:1rund4T1ng!@mongo-main.dpsrv.me:27017/dating?tls=true&tlsInsecure=true&tlsCertificateKeyFile=/etc/mongo/cert.pem' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
+ envsubst
+ true
+ echo 0
+ read secret_env
+ '[' -n  ]
+ continue
+ read secret_env
+ '[' -n 'REDIS_HOST=dpsrv-redis-latest' ]
0
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'REDIS_HOST dpsrv-redis-latest'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n dpsrv-redis-latest ]
+ eval echo dpsrv-redis-latest
+ echo dpsrv-redis-latest
+ secret_value=dpsrv-redis-latest
+ '[' -z s/^/dating-/g ]
+ echo REDIS_HOST
+ sed s/^/dating-/g
+ secret_name=dating-REDIS_HOST
+ echo dating-REDIS_HOST
+ tr A-Z_ a-z-
+ secret_name=dating-redis-host
+ envsubst
+ kubectl -n ezsso create secret generic dating-redis-host '--from-literal=dating-redis-host=dpsrv-redis-latest' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
+ true
+ echo 0
+ read secret_env
+ '[' -n 'REDIS_PORT=6379' ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
0
+ echo 'REDIS_PORT 6379'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n 6379 ]
+ eval echo 6379
+ echo 6379
+ secret_value=6379
+ '[' -z s/^/dating-/g ]
+ echo REDIS_PORT
+ sed s/^/dating-/g
+ secret_name=dating-REDIS_PORT
+ echo dating-REDIS_PORT
+ tr A-Z_ a-z-
+ secret_name=dating-redis-port
+ kubectl -n ezsso create secret generic dating-redis-port '--from-literal=dating-redis-port=6379' '--dry-run=client' -o yaml
+ + kubectl applyenvsubst -f
 -
+ grep -v unchanged
0
+ true
+ echo 0
+ read secret_env
+ '[' -n 'REDIS_PASSWORD=7f810373e1ed256265de4276bce83800' ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'REDIS_PASSWORD 7f810373e1ed256265de4276bce83800'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n 7f810373e1ed256265de4276bce83800 ]
+ eval echo 7f810373e1ed256265de4276bce83800
+ echo 7f810373e1ed256265de4276bce83800
+ secret_value=7f810373e1ed256265de4276bce83800
+ '[' -z s/^/dating-/g ]
+ echo REDIS_PASSWORD
+ sed s/^/dating-/g
+ secret_name=dating-REDIS_PASSWORD
+ echo dating-REDIS_PASSWORD
+ tr A-Z_ a-z-
+ secret_name=dating-redis-password
+ envsubst
+ grep -v unchanged
+ kubectl -n ezsso create secret generic dating-redis-password '--from-literal=dating-redis-password=7f810373e1ed256265de4276bce83800' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ true
+ echo 0
+ read secret_env
+ '[' -n  ]
+ continue
+ read secret_env
+ '[' -n 'EZSSO_OIDC_AUTH_ID=dating' ]
+ basename /usr/local/bin/export-env.sh
0
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'EZSSO_OIDC_AUTH_ID dating'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n dating ]
+ eval echo dating
+ echo dating
+ secret_value=dating
+ '[' -z s/^/dating-/g ]
+ sed s/^/dating-/g
+ echo EZSSO_OIDC_AUTH_ID
+ secret_name=dating-EZSSO_OIDC_AUTH_ID
+ echo dating-EZSSO_OIDC_AUTH_ID
+ tr A-Z_ a-z-
+ secret_name=dating-ezsso-oidc-auth-id
+ kubectl -n ezsso create secret generic dating-ezsso-oidc-auth-id '--from-literal=dating-ezsso-oidc-auth-id=dating' '--dry-run=client' -o yaml
+ envsubst
+ grep -v unchanged
+ kubectl apply -f -
+ true
+ echo 0
+ read secret_env
+ '[' -n 'EZSSO_OIDC_IDP_ID=0' ]
0
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'EZSSO_OIDC_IDP_ID 0'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n 0 ]
+ eval echo 0
+ echo 0
+ secret_value=0
+ '[' -z s/^/dating-/g ]
+ echo EZSSO_OIDC_IDP_ID
+ sed s/^/dating-/g
+ secret_name=dating-EZSSO_OIDC_IDP_ID
+ echo dating-EZSSO_OIDC_IDP_ID
+ tr A-Z_ a-z-
+ secret_name=dating-ezsso-oidc-idp-id
+ + + + kubectlgrep -v unchanged
 -n ezsso create secret generickubectl dating-ezsso-oidc-idp-id apply '--from-literal=dating-ezsso-oidc-idp-id=0' -f '--dry-run=client' - -o
 yaml
envsubst
+ true
+ echo 0
+ read secret_env
+ '[' -n 'EZSSO_OIDC_AUTH_PASSWORD=234247785d1870014ee031ac58d3ece8f7da6a297e1811902f902b20c338635a' ]
0
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'EZSSO_OIDC_AUTH_PASSWORD 234247785d1870014ee031ac58d3ece8f7da6a297e1811902f902b20c338635a'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n 234247785d1870014ee031ac58d3ece8f7da6a297e1811902f902b20c338635a ]
+ eval echo 234247785d1870014ee031ac58d3ece8f7da6a297e1811902f902b20c338635a
+ echo 234247785d1870014ee031ac58d3ece8f7da6a297e1811902f902b20c338635a
+ secret_value=234247785d1870014ee031ac58d3ece8f7da6a297e1811902f902b20c338635a
+ '[' -z s/^/dating-/g ]
+ echo EZSSO_OIDC_AUTH_PASSWORD
+ sed s/^/dating-/g
+ secret_name=dating-EZSSO_OIDC_AUTH_PASSWORD
+ tr A-Z_ a-z-
+ echo dating-EZSSO_OIDC_AUTH_PASSWORD
+ secret_name=dating-ezsso-oidc-auth-password
+ envsubst
+ kubectl apply -f -
+ kubectl -n ezsso create secret generic dating-ezsso-oidc-auth-password '--from-literal=dating-ezsso-oidc-auth-password=234247785d1870014ee031ac58d3ece8f7da6a297e1811902f902b20c338635a' '--dry-run=client' -o yaml
+ grep -v unchanged
+ true
+ echo 0
+ read secret_env
+ '[' -n 'EZSSO_OIDC_AUTHORIZE_URI=https://api.ezsso.me/oidc/authorize' ]
0
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'EZSSO_OIDC_AUTHORIZE_URI https://api.ezsso.me/oidc/authorize'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n https://api.ezsso.me/oidc/authorize ]
+ eval echo https://api.ezsso.me/oidc/authorize
+ echo https://api.ezsso.me/oidc/authorize
+ secret_value=https://api.ezsso.me/oidc/authorize
+ '[' -z s/^/dating-/g ]
+ echo EZSSO_OIDC_AUTHORIZE_URI
+ sed s/^/dating-/g
+ secret_name=dating-EZSSO_OIDC_AUTHORIZE_URI
+ echo dating-EZSSO_OIDC_AUTHORIZE_URI
+ tr A-Z_ a-z-
+ secret_name=dating-ezsso-oidc-authorize-uri
+ kubectl -n ezsso create secret generic dating-ezsso-oidc-authorize-uri '--from-literal=dating-ezsso-oidc-authorize-uri=https://api.ezsso.me/oidc/authorize' '--dry-run=client' -o yaml
+ kubectl apply -f -
+ grep -v unchanged
+ envsubst
+ true
+ echo 0
+ read secret_env
0
+ '[' -n 'EZSSO_OIDC_LOGOUT_URI=https://api.ezsso.me/oidc/logout' ]
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'EZSSO_OIDC_LOGOUT_URI https://api.ezsso.me/oidc/logout'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n https://api.ezsso.me/oidc/logout ]
+ eval echo https://api.ezsso.me/oidc/logout
+ echo https://api.ezsso.me/oidc/logout
+ secret_value=https://api.ezsso.me/oidc/logout
+ '[' -z s/^/dating-/g ]
+ echo EZSSO_OIDC_LOGOUT_URI
+ sed s/^/dating-/g
+ secret_name=dating-EZSSO_OIDC_LOGOUT_URI
+ tr A-Z_ a-z-
+ echo dating-EZSSO_OIDC_LOGOUT_URI
+ secret_name=dating-ezsso-oidc-logout-uri
+ kubectl -n ezsso create secret generic dating-ezsso-oidc-logout-uri '--from-literal=dating-ezsso-oidc-logout-uri=https://api.ezsso.me/oidc/logout' '--dry-run=client' -o yaml
+ envsubst
+ kubectl apply -f -
+ grep -v unchanged
+ true
+ echo 0
+ read secret_env
+ '[' -n  ]
+ continue
+ read secret_env
+ '[' -n 'WS_URL=wss://ws.ezsso.me/ws' ]
0
+ basename /usr/local/bin/export-env.sh
+ secret_env_file=/tmp/export-env.sh.505.secret_env
+ echo 'WS_URL wss://ws.ezsso.me/ws'
+ read -r secret_name secret_value
+ rm /tmp/export-env.sh.505.secret_env
+ '[' -n wss://ws.ezsso.me/ws ]
+ eval echo wss://ws.ezsso.me/ws
+ echo wss://ws.ezsso.me/ws
+ secret_value=wss://ws.ezsso.me/ws
+ '[' -z s/^/dating-/g ]
+ echo WS_URL
+ sed s/^/dating-/g
+ secret_name=dating-WS_URL
+ echo dating-WS_URL
+ tr A-Z_ a-z-
+ secret_name=dating-ws-url
+ kubectl apply -f -
+ kubectl -n ezsso create secret generic dating-ws-url '--from-literal=dating-ws-url=wss://ws.ezsso.me/ws' '--dry-run=client' -o yaml
+ envsubst
+ grep -v unchanged
0
+ true
+ echo 0
+ read secret_env
+ read secret_env_rule
+ basename /usr/local/bin/export-env.sh
+ secret_env_rule_file=/tmp/export-env.sh.505.secret_env_rule
+ echo 
+ read -r secret_env_ns secret_env_file secret_env_xform
+ rm /tmp/export-env.sh.505.secret_env_rule
+ secret_env_path=/mnt/data/
+ cat /mnt/data/
cat: read error: Is a directory
+ read secret_env
+ read secret_env_rule
